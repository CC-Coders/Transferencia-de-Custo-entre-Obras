<list>
  <ProcessDefinition>
    <processDefinitionPK>
      <companyId>1</companyId>
      <processId>Transferência de Custos entre Obras</processId>
    </processDefinitionPK>
    <processDescription>Transferência de Custos entre Obras</processDescription>
    <instruction></instruction>
    <active>true</active>
    <publicProcess>false</publicProcess>
    <volumeId>Default</volumeId>
    <categoryId>Gerenciais</categoryId>
    <managerEngineAllocationId>Grupo</managerEngineAllocationId>
    <managerEngineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;gestoresTransferenciaDeCustoEntreObras&lt;/Group&gt;&lt;/AssignmentController&gt;</managerEngineAllocationConfiguration>
    <snapshotFrequency>0</snapshotFrequency>
    <baseDay>0</baseDay>
    <baseMonth>0</baseMonth>
    <periodId>Default</periodId>
    <uniqueCardVersion>false</uniqueCardVersion>
    <keyWord></keyWord>
    <complementsLevel>1</complementsLevel>
    <notifyRequisitionerComplements>true</notifyRequisitionerComplements>
    <notifyManagerComplements>false</notifyManagerComplements>
    <deadlineTime>0</deadlineTime>
    <warningDeadlineTime>0</warningDeadlineTime>
    <notifyAuthorityComplements>true</notifyAuthorityComplements>
  </ProcessDefinition>
  <ProcessDefinitionVersion>
    <processDefinitionVersionPK>
      <companyId>1</companyId>
      <processId>Transferência de Custos entre Obras</processId>
      <version>30</version>
    </processDefinitionVersionPK>
    <versionDescription></versionDescription>
    <formId>1782503</formId>
    <editionMode>true</editionMode>
    <updateAttachmentsVersion>false</updateAttachmentsVersion>
    <controlsAttachmentsSecurity>false</controlsAttachmentsSecurity>
    <active>true</active>
    <blockedVersion>false</blockedVersion>
    <counterSign>false</counterSign>
    <openInstances>0</openInstances>
    <bpmnVersion>2</bpmnVersion>
    <processStates/>
    <favorito>false</favorito>
    <inheritFormSecurity>false</inheritFormSecurity>
    <mobileReady>false</mobileReady>
  </ProcessDefinitionVersion>
  <list>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>4</sequence>
      </processStatePK>
      <stateName>Início</stateName>
      <stateDescription>Início</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;permissaoInicioTransferenciaDeCustoEntreObras&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>true</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>150</positionX>
      <positionY>79</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>10</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>5</sequence>
      </processStatePK>
      <stateName>Aprovação Obra Origem</stateName>
      <stateDescription>Aprovação Obra Origem</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;usuarioAprovadorOrigem&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>440</positionX>
      <positionY>240</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>8</sequence>
      </processStatePK>
      <stateName>Aprovação Obra Destino</stateName>
      <stateDescription>Aprovação Obra Destino</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;usuarioAprovadorDestino&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>450</positionX>
      <positionY>610</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>9</sequence>
      </processStatePK>
      <stateName>Define Aprovador Obra Destino</stateName>
      <stateDescription>Define Aprovador Obra Destino</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>0</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>310</positionX>
      <positionY>480</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>10</sequence>
      </processStatePK>
      <stateName>Define Aprovador Obra Origem</stateName>
      <stateDescription>Define Aprovador Obra Origem</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>0</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>310</positionX>
      <positionY>340</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>14</sequence>
      </processStatePK>
      <stateName>Tratamento de Erro</stateName>
      <stateDescription>Tratamento de Erro</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Administrador TI&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1050</positionX>
      <positionY>100</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>20</sequence>
      </processStatePK>
      <stateName>Tratamento de Erro</stateName>
      <stateDescription>Tratamento de Erro</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Administrador TI&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1050</positionX>
      <positionY>20</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>26</sequence>
      </processStatePK>
      <stateName>Lança Transferências</stateName>
      <stateDescription>Lança Transferências</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>980</positionX>
      <positionY>490</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>30</sequence>
      </processStatePK>
      <stateName>Tratamento de Erro</stateName>
      <stateDescription>Tratamento de Erro</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Administrador TI&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1140</positionX>
      <positionY>490</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>13</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>300</positionX>
      <positionY>540</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>9</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>19</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>300</positionX>
      <positionY>330</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>10</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>31</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1057</positionX>
      <positionY>511</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>26</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>57</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>260</positionX>
      <positionY>290</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>58</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>250</positionX>
      <positionY>577</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>59</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>970</positionX>
      <positionY>37</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>60</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>970</positionX>
      <positionY>117</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>65</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1200</positionX>
      <positionY>37</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>66</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1200</positionX>
      <positionY>120</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>69</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>290</positionX>
      <positionY>290</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>71</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>280</positionX>
      <positionY>577</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>6</sequence>
      </processStatePK>
      <stateName>Paralelo</stateName>
      <stateDescription>Paralelo</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>false</automatic>
      <positionX>140</positionX>
      <positionY>240</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>3</stateType>
      <bpmnType>126</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>23</sequence>
      </processStatePK>
      <stateName>Join</stateName>
      <stateDescription>Join</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>false</automatic>
      <positionX>660</positionX>
      <positionY>480</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>4</stateType>
      <bpmnType>127</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>36</sequence>
      </processStatePK>
      <stateName>Decisão</stateName>
      <stateDescription>Decisão</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>470</positionX>
      <positionY>338</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>37</sequence>
      </processStatePK>
      <stateName>Decisão</stateName>
      <stateDescription>Decisão</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>470</positionX>
      <positionY>480</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>44</sequence>
      </processStatePK>
      <stateName>Decisão</stateName>
      <stateDescription>Decisão</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>840</positionX>
      <positionY>480</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>28</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1020</positionX>
      <positionY>640</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
  </list>
  <list>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <expressionOrder>1</expressionOrder>
        <version>30</version>
        <sequence>36</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>5</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <expressionOrder>2</expressionOrder>
        <version>30</version>
        <sequence>36</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>23</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <expressionOrder>3</expressionOrder>
        <version>30</version>
        <sequence>36</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>23</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <expressionOrder>1</expressionOrder>
        <version>30</version>
        <sequence>37</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>8</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <expressionOrder>2</expressionOrder>
        <version>30</version>
        <sequence>37</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>23</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <expressionOrder>3</expressionOrder>
        <version>30</version>
        <sequence>37</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>23</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <expressionOrder>1</expressionOrder>
        <version>30</version>
        <sequence>44</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>4</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;4&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <expressionOrder>2</expressionOrder>
        <version>30</version>
        <sequence>44</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>26</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;4&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <conditionType>1</conditionType>
    </ConditionProcessState>
  </list>
  <list>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>7</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>4</initialStateSequence>
      <finalStateSequence>6</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>11</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>6</initialStateSequence>
      <finalStateSequence>10</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>12</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>6</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>29</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>26</initialStateSequence>
      <finalStateSequence>28</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>32</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>31</initialStateSequence>
      <finalStateSequence>30</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>33</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>30</initialStateSequence>
      <finalStateSequence>26</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>43</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>36</initialStateSequence>
      <finalStateSequence>23</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>45</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>23</initialStateSequence>
      <finalStateSequence>44</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>46</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>44</initialStateSequence>
      <finalStateSequence>26</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>47</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>44</initialStateSequence>
      <finalStateSequence>4</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>48</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>10</initialStateSequence>
      <finalStateSequence>36</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>49</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>36</initialStateSequence>
      <finalStateSequence>5</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>50</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>5</initialStateSequence>
      <finalStateSequence>10</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>51</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>9</initialStateSequence>
      <finalStateSequence>37</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>52</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>37</initialStateSequence>
      <finalStateSequence>8</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>53</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>37</initialStateSequence>
      <finalStateSequence>23</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>54</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>8</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>61</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>13</initialStateSequence>
      <finalStateSequence>58</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>62</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>19</initialStateSequence>
      <finalStateSequence>57</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>63</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>59</initialStateSequence>
      <finalStateSequence>20</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>64</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>60</initialStateSequence>
      <finalStateSequence>14</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>67</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>20</initialStateSequence>
      <finalStateSequence>65</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>68</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>14</initialStateSequence>
      <finalStateSequence>66</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>70</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>69</initialStateSequence>
      <finalStateSequence>10</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>72</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>71</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>73</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>58</initialStateSequence>
      <finalStateSequence>60</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>74</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>57</initialStateSequence>
      <finalStateSequence>59</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>75</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>65</initialStateSequence>
      <finalStateSequence>69</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <linkSequence>76</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>66</initialStateSequence>
      <finalStateSequence>71</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
  </list>
  <list/>
  <list>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask26</eventId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask26(attempt, message) {
    try {
        updateDataCompetencia();
        atualizaStatusTransferencia(STATUS_TRANSFENCIA.APROVADO);

        var CODCOLIGADA_ORIGEM = hAPI.getCardValue(&quot;ccustoObraOrigem&quot;).split(&quot; - &quot;)[0];
        var CODCCUSTO_ORIGEM = hAPI.getCardValue(&quot;ccustoObraOrigem&quot;).split(&quot; - &quot;)[1];
        var NOMECCUSTO_ORIGEM = hAPI.getCardValue(&quot;ccustoObraOrigem&quot;).split(&quot; - &quot;)[2];

        var CODCOLIGADA_DESTINO = hAPI.getCardValue(&quot;ccustoObraDestino&quot;).split(&quot; - &quot;)[0];
        var CODCCUSTO_DESTINO = hAPI.getCardValue(&quot;ccustoObraDestino&quot;).split(&quot; - &quot;)[1];
        var NOMECCUSTO_DESTINO = hAPI.getCardValue(&quot;ccustoObraDestino&quot;).split(&quot; - &quot;)[2];

        var PRODUTOS = getProdutos(CODCOLIGADA_ORIGEM, CODCOLIGADA_DESTINO);
        var CUSTO_OU_RECEITA = hAPI.getCardValue(&quot;TRANSFERE_CUSTO&quot;) == &quot;true&quot; ? &quot;CUSTO&quot;:&quot;RECEITA&quot;;


        // Lanca ajuste para Obra Origem
        // Se for TRANSFERE_CUSTO, então a Obra Origem, recebe o PRODUTO AUMENTA_RESULTADO, pois está enviando o CUSTO
        // Porém, se for TRANSFERE_RECEITA, então a Obra Origem, recebe o PRODUTO DIMINUI_RESULTADO, pois está enviando a RECEITA
        var PRODUTO_ORIGEM = hAPI.getCardValue(&quot;TRANSFERE_CUSTO&quot;) == &quot;true&quot; ? PRODUTOS[CUSTO_OU_RECEITA].AUMENTA_RESULTADO : PRODUTOS[CUSTO_OU_RECEITA].DIMINUI_RESULTADO;
        var idmov = geraMovimentos(CODCOLIGADA_ORIGEM, CODCCUSTO_ORIGEM, CODCOLIGADA_DESTINO, NOMECCUSTO_ORIGEM, PRODUTO_ORIGEM);
        hAPI.setCardValue(&quot;IDMOV_ORIGEM&quot;, idmov);


        // Lanca ajuste para Obra Destino
        // Se for TRANSFERE_CUSTO, então a Obra Destino, recebe o PRODUTO DIMINUI_RESULTADO, pois está recebendo CUSTO
        // Porém, se for TRANSFERE_RECEITA, então a Obra Destino, recebe o PRODUTO AUMENTA_RESULTADO, pois está recebendo a RECEITA
        var PRODUTO_DESTINO = hAPI.getCardValue(&quot;TRANSFERE_CUSTO&quot;) == &quot;true&quot; ? PRODUTOS[CUSTO_OU_RECEITA].DIMINUI_RESULTADO : PRODUTOS[CUSTO_OU_RECEITA].AUMENTA_RESULTADO;
        var idmov = geraMovimentos(CODCOLIGADA_DESTINO, CODCCUSTO_DESTINO, CODCOLIGADA_ORIGEM, NOMECCUSTO_DESTINO, PRODUTO_DESTINO);
        hAPI.setCardValue(&quot;IDMOV_DESTINO&quot;, idmov);


    
        if (CODCOLIGADA_ORIGEM != CODCOLIGADA_DESTINO) {
            // Se Coligada de Origem for Diferente de Destino, informa a Controladoria
            EnviaEmail(&quot;contabilidade@castilho.com.br; control@castilho.com.br; informatica@castilho.com.br; padilha@castilho.com.br&quot;);
        }
    } catch (error) {
        log.error(error);
        throw error;
    }
}

// Gera 1.1.93
function getProdutos(CODCOLIGADA_ORIGEM, CODCOLIGADA_DESTINO) {
    if (CODCOLIGADA_ORIGEM == CODCOLIGADA_DESTINO) {
        // Se transferencia entre Centro de Custo
        var PRODUTOS = {
            CUSTO:{
                AUMENTA_RESULTADO: {
                    CODIGOPRD_COLIGADA1: &quot;11.006.00110&quot;,
                    CODIGOPRD: &quot;11.006.00110&quot;,
                    DESCPRD: &quot;Ajustes gerenciais (+)&quot;,
                },
                DIMINUI_RESULTADO: {
                    CODIGOPRD_COLIGADA1: &quot;11.006.00111&quot;,
                    CODIGOPRD: &quot;11.006.00111&quot;,
                    DESCPRD: &quot;Ajustes gerenciais (-)&quot;,
                }
            }, 
            RECEITA:{
                AUMENTA_RESULTADO: {
                    CODIGOPRD_COLIGADA1: &quot;11.999.00001&quot;,
                    CODIGOPRD: &quot;11.999.00001&quot;,
                    DESCPRD: &quot;Receita de Obras (+)&quot;,
                },
                DIMINUI_RESULTADO: {
                    CODIGOPRD_COLIGADA1: &quot;11.999.00000&quot;,
                    CODIGOPRD: &quot;11.999.00000&quot;,
                    DESCPRD: &quot;Receita de Obras (-)&quot;,
                }
            }
        }
        return PRODUTOS;
    } else {
        // Se Transferencia entre Coligadas
        var PRODUTOS = {
            CUSTO:{
                AUMENTA_RESULTADO: {
                    CODIGOPRD_COLIGADA1: &quot;11.006.00160&quot;,
                    CODIGOPRD: &quot;11.006.00158&quot;,
                    DESCPRD: &quot;Ajuste entre coligadas (+)&quot;,
                },
                DIMINUI_RESULTADO: {
                    CODIGOPRD_COLIGADA1: &quot;11.006.00161&quot;,
                    CODIGOPRD: &quot;11.006.00159&quot;,
                    DESCPRD: &quot;Ajuste entre coligadas (-)&quot;,
                }
            },
            RECEITA:{
                AUMENTA_RESULTADO: {
                    CODIGOPRD_COLIGADA1: &quot;11.999.00001&quot;,
                    CODIGOPRD: &quot;11.999.00001&quot;,
                    DESCPRD: &quot;Receita de Obras (+)&quot;,
                },
                DIMINUI_RESULTADO: {
                    CODIGOPRD_COLIGADA1: &quot;11.999.00000&quot;,
                    CODIGOPRD: &quot;11.999.00000&quot;,
                    DESCPRD: &quot;Receita de Obras (-)&quot;,
                }
            }
        }
        return PRODUTOS;
    }
}
function buscaIdDoProduto(CODCOLIGADA, CODIGOPRD) {
    var query = &quot;SELECT IDPRD, CODIGOPRD, NOMEFANTASIA FROM TPRODUTO WHERE CODCOLPRD = ? AND CODIGOPRD = ?&quot;;

    return executaQuery(query, [
        { type: &quot;int&quot;, value: CODCOLIGADA },
        { type: &quot;varchar&quot;, value: CODIGOPRD },
    ], &quot;/jdbc/FluigRM&quot;);
}
function buscaLocalEstoquePorNome(CODCOLIGADA, CODFILIAL, NOME) {
    var ds = DatasetFactory.getDataset(&quot;LocalRM&quot;, null, [
        DatasetFactory.createConstraint(&quot;clg&quot;, CODCOLIGADA, CODCOLIGADA, ConstraintType.MUST),
        DatasetFactory.createConstraint(&quot;cdFl&quot;, CODFILIAL, CODFILIAL, ConstraintType.MUST),
    ], null);

    for (var i = 0; i &lt; ds.values.length; i++) {
        var nomeLocalEstoque = ds.getValue(i, &quot;nome&quot;);
        if (NOME == nomeLocalEstoque) {
            return ds.getValue(i, &quot;codloc&quot;);
        }
    }
}

function geraMovimentos(CODCOLIGADA, CODCCUSTO, CODCOLIGADA_FORNECEDOR, NOMECCUSTO, PRODUTO) {
    var CODLOC = buscaLocalEstoquePorNome(CODCOLIGADA, 1, NOMECCUSTO);
    log.info(&quot;CODLOC&quot;)
    log.info(CODLOC)
    var CNPJColigadaFornecedor = buscaCNPJDaColigada(CODCOLIGADA_FORNECEDOR);
    log.info(&quot;CNPJColigadaFornecedor&quot;)
    log.info(CNPJColigadaFornecedor)
    var fornecedor = buscaCodigoFornecedor(CODCOLIGADA, CNPJColigadaFornecedor);
    var CODCOLCFO = fornecedor[0];
    var CODCFO = fornecedor[1];
    log.info(&quot;CODCFO&quot;)
    log.info(CODCFO)

    var xml = montaXML(CODCOLIGADA, CODLOC, CODCOLCFO, CODCFO, PRODUTO, CODCCUSTO);

    var idmov = ImportaMovimento(CODCOLIGADA, xml);
    log.info(&quot;Movimentos inseridos: &quot; + idmov);
    return idmov;

}
function montaXML(CODCOLIGADA, CODLOC, CODCOLCFO, CODCFO, PRODUTO, CODCCUSTO) {
    var URLFluig = getServerURL() + &quot;/portal/p/1/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=&quot; + getValue(&quot;WKNumProces&quot;);

    var xml = &quot;&quot;;
    xml += &quot;&lt;MovMovimento&gt;&quot;;
    xml += &quot;    &lt;TMOV&gt;&quot;;
    xml += &quot;        &lt;CODCOLIGADA&gt;&quot; + CODCOLIGADA + &quot;&lt;/CODCOLIGADA&gt;&quot;;
    xml += &quot;        &lt;IDMOV&gt;-1&lt;/IDMOV&gt;&quot;;
    xml += &quot;        &lt;NUMEROMOV&gt;-1&lt;/NUMEROMOV&gt; &quot;;
    xml += &quot;        &lt;CODFILIAL&gt;1&lt;/CODFILIAL&gt;&quot;;
    xml += &quot;        &lt;CODLOC&gt;&quot; + CODLOC + &quot;&lt;/CODLOC&gt;&quot;;
    xml += &quot;        &lt;CODTMV&gt;1.1.93&lt;/CODTMV&gt;&quot;;
    xml += &quot;        &lt;TIPO&gt;A&lt;/TIPO&gt;&quot;;
    xml += &quot;        &lt;STATUS&gt;A&lt;/STATUS&gt;&quot;;
    xml += &quot;        &lt;DATAEMISSAO&gt;&quot; + getDateNow() + &quot;&lt;/DATAEMISSAO&gt;&quot;;
    xml += &quot;        &lt;DATASAIDA&gt;&quot; + getDateNow() + &quot;&lt;/DATASAIDA&gt;&quot;;
    xml += &quot;        &lt;CODMOEVALORLIQUIDO&gt;R$&lt;/CODMOEVALORLIQUIDO&gt;&quot;;
    xml += &quot;        &lt;INTEGRAAPLICACAO&gt;T&lt;/INTEGRAAPLICACAO&gt;&quot;;
    xml += &quot;        &lt;CODCOLIGADA1&gt;&quot; + CODCOLIGADA + &quot;&lt;/CODCOLIGADA1&gt;&quot;;
    xml += &quot;        &lt;CODCFO&gt;&quot; + CODCFO + &quot;&lt;/CODCFO&gt;&quot;;
    xml += &quot;        &lt;CODCFOAUX&gt;&quot; + CODCFO + &quot;&lt;/CODCFOAUX&gt;&quot;;
    xml += &quot;        &lt;CODCOLCFO&gt;&quot; + CODCOLCFO + &quot;&lt;/CODCOLCFO&gt;&quot;;
    xml += &quot;        &lt;CODCPG&gt;001&lt;/CODCPG&gt;&quot;;
    xml += &quot;    &lt;/TMOV&gt;&quot;;



    var CODIGOPRD = CODCOLIGADA == 1 ?  PRODUTO.CODIGOPRD_COLIGADA1: PRODUTO.CODIGOPRD;
    var DESCPRODUTO = PRODUTO.DESCPRD;
    var IDPRD = buscaIdDoProduto(CODCOLIGADA, CODIGOPRD)[0].IDPRD;

    // var DESCITEM = item.DescricaoItem;
    var QUANTIDADE = 1;
    var VALORUNIT = moneyToFloat(hAPI.getCardValue(&quot;valorObraDestino&quot;)).toString().replace(&quot;.&quot;, &quot;,&quot;);
    var CODUND = &quot;UN&quot;;

    xml += &quot;&lt;TITMMOV&gt;&quot;;
    xml += &quot;    &lt;CODCOLIGADA&gt;&quot; + CODCOLIGADA + &quot;&lt;/CODCOLIGADA&gt;&quot;;
    xml += &quot;    &lt;IDMOV&gt;-1&lt;/IDMOV&gt;&quot;;
    xml += &quot;    &lt;CODLOC&gt;&quot; + CODLOC + &quot;&lt;/CODLOC&gt;&quot;;
    xml += &quot;    &lt;NSEQITMMOV&gt;1&lt;/NSEQITMMOV&gt;&quot;;
    xml += &quot;    &lt;NUMEROSEQUENCIAL&gt;1&lt;/NUMEROSEQUENCIAL&gt;&quot;;
    xml += &quot;    &lt;IDPRD&gt;&quot; + IDPRD + &quot;&lt;/IDPRD&gt;&quot;;
    xml += &quot;    &lt;CODIGOPRD&gt;&quot; + CODIGOPRD + &quot;&lt;/CODIGOPRD&gt;&quot;;
    xml += &quot;    &lt;NOMEFANTASIA&gt;&quot; + DESCPRODUTO + &quot;&lt;/NOMEFANTASIA&gt;&quot;;
    xml += &quot;    &lt;QUANTIDADE&gt;&quot; + QUANTIDADE + &quot;&lt;/QUANTIDADE&gt;&quot;;
    xml += &quot;    &lt;PRECOUNITARIO&gt;&quot; + VALORUNIT + &quot;&lt;/PRECOUNITARIO&gt;&quot;;
    xml += &quot;    &lt;CODUND&gt;&quot; + CODUND + &quot;&lt;/CODUND&gt;&quot;;
    xml += &quot;    &lt;VALORUNITARIO&gt;&quot; + VALORUNIT + &quot;&lt;/VALORUNITARIO&gt;&quot;;
    // xml += &quot;    &lt;HISTORICOCURTO&gt;&quot; + DESCITEM + &quot;&lt;/HISTORICOCURTO&gt;&quot;;
    xml += &quot;    &lt;INTEGRAAPLICACAO&gt;T&lt;/INTEGRAAPLICACAO&gt;&quot;;
    xml += &quot;    &lt;IDMOVHST&gt;-1&lt;/IDMOVHST&gt;&quot;;
    xml += &quot;    &lt;CODCOLIGADA1&gt;&quot; + CODCOLIGADA + &quot;&lt;/CODCOLIGADA1&gt;&quot;;
    xml += &quot;    &lt;NSEQITMMOV1&gt;1&lt;/NSEQITMMOV1&gt;&quot;;
    xml += &quot;&lt;/TITMMOV&gt;&quot;


    xml += &quot;&lt;TITMMOVRATCCU&gt;&quot;;
    xml += &quot;    &lt;CODCOLIGADA&gt;&quot; + CODCOLIGADA + &quot;&lt;/CODCOLIGADA&gt;&quot;;
    xml += &quot;    &lt;IDMOV&gt;-1&lt;/IDMOV&gt;&quot;;
    xml += &quot;    &lt;NSEQITMMOV&gt;1&lt;/NSEQITMMOV&gt;&quot;;
    xml += &quot;    &lt;CODCCUSTO&gt;&quot; + CODCCUSTO + &quot;&lt;/CODCCUSTO&gt;&quot;;
    xml += &quot;    &lt;PERCENTUAL&gt;100&lt;/PERCENTUAL&gt;&quot;;
    xml += &quot;    &lt;IDMOVRATCCU&gt;-1&lt;/IDMOVRATCCU&gt;&quot;;
    xml += &quot;&lt;/TITMMOVRATCCU&gt;&quot;;


    xml += &quot;&lt;TITMMOVRATDEP&gt;&quot;;
    xml += &quot;    &lt;CODCOLIGADA&gt;&quot; + CODCOLIGADA + &quot;&lt;/CODCOLIGADA&gt;&quot;;
    xml += &quot;    &lt;IDMOV&gt;-1&lt;/IDMOV&gt;&quot;;
    xml += &quot;    &lt;NSEQITMMOV&gt;1&lt;/NSEQITMMOV&gt;&quot;;
    xml += &quot;    &lt;CODFILIAL&gt;1&lt;/CODFILIAL&gt;&quot;;
    xml += &quot;    &lt;CODDEPARTAMENTO&gt;1.3.01&lt;/CODDEPARTAMENTO&gt;&quot;;
    xml += &quot;    &lt;PERCENTUAL&gt;100&lt;/PERCENTUAL&gt;&quot;;
    xml += &quot;&lt;/TITMMOVRATDEP&gt;&quot;;


    xml += &quot;&lt;TMOVCOMPL&gt;&quot;;
    xml += &quot;    &lt;CODCOLIGADA&gt;&quot; + CODCOLIGADA + &quot;&lt;/CODCOLIGADA&gt; &quot;;
    xml += &quot;    &lt;IDMOV&gt;-1&lt;/IDMOV&gt;&quot;;
    xml += &quot;    &lt;FLUIG&gt;&quot; + URLFluig + &quot;&lt;/FLUIG&gt;&quot;;
    xml += &quot;&lt;/TMOVCOMPL&gt;&quot;;
    xml += &quot;&lt;/MovMovimento&gt; &quot;;

    xml = xml.split(&quot;&amp;&quot;).join(&quot;&amp;amp;&quot;);
    log.info(&quot;XML: &quot; + xml);

    return xml;
}

function buscaCodigoFornecedor(CODCOLIGADA, CGCCFO) {
    var FCFO = DatasetFactory.getDataset(&quot;FCFO&quot;, null, [
        DatasetFactory.createConstraint(&quot;CODCOLIGADA&quot;, CODCOLIGADA, CODCOLIGADA, ConstraintType.MUST),
        DatasetFactory.createConstraint(&quot;CGCCFO&quot;, CGCCFO, CGCCFO, ConstraintType.MUST),
    ], null);
    if (FCFO.values.length &gt; 0) {
        return [CODCOLIGADA, FCFO.getValue(0, &quot;CODCFO&quot;)];
    }

    var FCFO = DatasetFactory.getDataset(&quot;FCFO&quot;, null, [
        DatasetFactory.createConstraint(&quot;CODCOLIGADA&quot;, 0, 0, ConstraintType.MUST),
        DatasetFactory.createConstraint(&quot;CGCCFO&quot;, CGCCFO, CGCCFO, ConstraintType.MUST),
    ], null);
    if (FCFO.values.length &gt; 0) {
        return [0, FCFO.getValue(0, &quot;CODCFO&quot;)];
    }
}
function buscaCNPJDaColigada(CODCOLIGADA) {
    var ds = DatasetFactory.getDataset(&quot;Coligadas&quot;, null, [
        DatasetFactory.createConstraint(&quot;CODCOLIGADA&quot;, CODCOLIGADA, CODCOLIGADA, ConstraintType.MUST)
    ], null);
    return ds.getValue(0, &quot;CGC&quot;);
}

function ImportaMovimento(CODCOLIGADA, xml) {
    var ds = DatasetFactory.getDataset(&quot;ImportaMovRM&quot;, null, [
        DatasetFactory.createConstraint(&quot;xmlMov&quot;, xml, xml, ConstraintType.MUST),
        DatasetFactory.createConstraint(&quot;codColigada&quot;, CODCOLIGADA, CODCOLIGADA, ConstraintType.MUST)
    ], null);

    if (!ds || ds == &quot;&quot; || ds == null) {
        return [false, &quot;Houve um erro na comunicação com o webservice. Tente novamente!&quot;];
    }
    else {
        if (ds.values[0][0] == &quot;false&quot;) {
            throw &quot;Erro ao gerar movimento. Favor entrar em contato com o administrador do sistema. Mensagem: &quot; + ds.values[0][1];
        }
        else if (ds.values[0][0] == &quot;true&quot;) {
            return ds.values[0][2];
        }
    }
}


function EnviaEmail(emails) {
    var CorpoEmail = &quot;&quot;;
    CorpoEmail += &quot;Olá, &lt;br&gt;&quot;;
    CorpoEmail += &quot;Segue abaixo as informações das Transferência de &quot;+(hAPI.getCardValue(&quot;TRANSFERE_CUSTO&quot;) == &quot;true&quot; ? &quot;CUSTO&quot;:&quot;RECEITA&quot;)+&quot; entre Coligadas&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;h4&gt;OBRA ORIGEM&lt;/h4&gt;&quot;;
    CorpoEmail += &quot;&lt;b&gt;Coligada: &lt;/b&gt;&lt;span&gt;&quot; + hAPI.getCardValue(&quot;ccustoObraOrigem&quot;).split(&quot; - &quot;)[0] + &quot;&lt;/span&gt;&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;b&gt;Centro de Custo: &lt;/b&gt;&lt;span&gt;&quot; + hAPI.getCardValue(&quot;ccustoObraOrigem&quot;) + &quot;&lt;/span&gt;&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;h4&gt;OBRA DESTINO&lt;/h4&gt;&quot;;
    CorpoEmail += &quot;&lt;b&gt;Coligada: &lt;/b&gt;&lt;span&gt;&quot; + hAPI.getCardValue(&quot;ccustoObraDestino&quot;).split(&quot; - &quot;)[0] + &quot;&lt;/span&gt;&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;b&gt;Centro de Custo: &lt;/b&gt;&lt;span&gt;&quot; + hAPI.getCardValue(&quot;ccustoObraDestino&quot;) + &quot;&lt;/span&gt;&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;b&gt;Valor: &lt;/b&gt;&lt;span&gt;&quot; + FormataValorParaMoeda(parseFloat(hAPI.getCardValue(&quot;valorTotal&quot;))) + &quot;&lt;/span&gt;&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;b&gt;Data Competência: &lt;/b&gt;&lt;span&gt;&quot; + getDateNow().split(&quot;-&quot;).reverse().join(&quot;/&quot;) + &quot;&lt;/span&gt;&lt;br&gt;&quot;;
    CorpoEmail += &quot;&lt;br&gt;&quot;;
    CorpoEmail += &quot;Para mais informações, &lt;a href=&apos;http://fluig.castilho.com.br:1010/portal/p/1/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=&quot; + getValue(&quot;WKNumProces&quot;) + &quot;&apos;&gt;clique aqui&lt;/a&gt;.&quot;;

    var url = &apos;http://fluig.castilho.com.br:1010&apos;;//Prod
    // var url = &apos;http://homologacao.castilho.com.br:2020&apos;;//Homolog

    var data = {
        &quot;to&quot;: emails,
        from: &quot;fluig@construtoracastilho.com.br&quot;, //Prod
        &quot;subject&quot;: &quot;Transferência de &quot;+(hAPI.getCardValue(&quot;TRANSFERE_CUSTO&quot;) == &quot;true&quot; ? &quot;CUSTO&quot;:&quot;RECEITA&quot;)+&quot; entre Coligadas - #&quot; + getValue(&quot;WKNumProces&quot;), //   subject
        &quot;templateId&quot;: &quot;TPL_PADRAO_CASTILHO&quot;, // Email template Id previously registered
        &quot;dialectId&quot;: &quot;pt_BR&quot;, //Email dialect , if not informed receives pt_BR , email dialect (&quot;pt_BR&quot;, &quot;en_US&quot;, &quot;es&quot;)
        &quot;param&quot;: {
            &quot;CORPO_EMAIL&quot;: CorpoEmail,
            &quot;SERVER_URL&quot;: url,
            &quot;TENANT_ID&quot;: &quot;1&quot;
        }
    };


    var clientService = fluigAPI.getAuthorizeClientService();
    var data = {
        companyId: getValue(&quot;WKCompany&quot;) + &apos;&apos;,
        serviceCode: &apos;ServicoFluig&apos;,
        endpoint: &apos;/api/public/alert/customEmailSender&apos;,
        method: &apos;post&apos;,
        params: data,
        options: {
            encoding: &apos;UTF-8&apos;,
            mediaType: &apos;application/json&apos;,
            useSSL: true
        },
        headers: {
            &quot;Content-Type&quot;: &apos;application/json;charset=UTF-8&apos;
        }
    };


    var vo = clientService.invoke(JSON.stringify(data));

    if (vo.getResult() == null || vo.getResult().isEmpty()) {
        throw new Exception(&quot;Retorno está vazio&quot;);
    } else {
        return vo.getResult();
    }
}




function atualizaStatusTransferencia(STATUS) {
    var id = hAPI.getCardValue(&quot;ID_TRANSFERENCIAS_DE_CUSTO&quot;);

    var query = &quot;UPDATE TRANSFERENCIAS_DE_CUSTO SET STATUS = ? WHERE ID = ?&quot;;
    executeUpdateSemResult(query, [
        { type: &quot;int&quot;, value: STATUS },
        { type: &quot;int&quot;, value: id },
    ]);
}
function updateDataCompetencia(){
    var date = getDateNow();
    var id = hAPI.getCardValue(&quot;ID_TRANSFERENCIAS_DE_CUSTO&quot;);

    var query =
        &quot;UPDATE TRANSFERENCIAS_DE_CUSTO &quot; +
        &quot;   SET DATA_COMPETENCIA = ? &quot; +
        &quot;   WHERE ID = ? &quot;;

    return executeUpdateSemResult(query, [
        { type: &quot;varchar&quot;, value: date },
        { type: &quot;int&quot;, value: id },
    ]);
}


// Utils
function getServerURL() {
    var ds = DatasetFactory.getDataset(&quot;dsGetServerURL&quot;, null, null, null);
    return ds.getValue(0, &quot;URL&quot;);
}
function executaQuery(query, constraints, dataSorce) {
    try {
        var dataSource = dataSorce;
        var ic = new javax.naming.InitialContext();
        var ds = ic.lookup(dataSource);

        var conn = ds.getConnection();
        var stmt = conn.prepareStatement(query);

        var counter = 1;
        for (var i = 0; i &lt; constraints.length; i++) {
            var val = constraints[i];
            if (val.type == &quot;int&quot;) {
                stmt.setInt(counter, val.value);
            }
            else if (val.type == &quot;float&quot;) {
                stmt.setFloat(counter, val.value);
            }
            else if (val.type == &quot;date&quot;) {
                stmt.setString(counter, val.value);
            }
            else if (val.type == &quot;datetime&quot;) {
                stmt.setString(counter, val.value);
            } else {
                stmt.setString(counter, val.value);
            }
            counter++;
        }

        var rs = stmt.executeQuery();
        var columnCount = rs.getMetaData().getColumnCount();
        var retorno = [];

        while (rs.next()) {
            var linha = {};
            for (var j = 1; j &lt; columnCount + 1; j++) {
                linha[rs.getMetaData().getColumnName(j)] = rs.getObject(rs.getMetaData().getColumnName(j)).toString() + &quot;&quot;;
            }
            retorno.push(linha);
        }

        return retorno;

    } catch (e) {
        log.error(&quot;ERRO==============&gt; &quot; + e.message);
        throw e;
    } finally {
        if (stmt != null) {
            stmt.close();
        }
        if (conn != null) {
            conn.close();
        }
    }
}
function executeUpdateSemResult(query, constraints) {
    var dataSource = &quot;/jdbc/CastilhoCustom&quot;;
    var ic = new javax.naming.InitialContext();
    var ds = ic.lookup(dataSource);

    log.info(&quot;wfkTransferenciaDeCustoEntreObras.beforeTaskSave: executandoQuery&quot;);
    log.info(query);
    try {
        var conn = ds.getConnection();
        var stmt = conn.prepareStatement(query, Packages.java.sql.Statement.RETURN_GENERATED_KEYS);

        var counter = 1;
        for (var i = 0; i &lt; constraints.length; i++) {
            var val = constraints[i];
            if (val.type == &quot;int&quot;) {
                stmt.setInt(counter, val.value);
            }
            else if (val.type == &quot;float&quot;) {
                stmt.setFloat(counter, val.value);
            }
            else if (val.type == &quot;date&quot;) {
                stmt.setString(counter, val.value);
            }
            else if (val.type == &quot;datetime&quot;) {
                stmt.setString(counter, val.value);
            } else {
                stmt.setString(counter, val.value);
            }
            counter++;
        }

        log.info(&quot;wfkTransferenciaDeCustoEntreObras.beforeTaskSave: executandoQuery&quot;+constraints.length)

       stmt.execute();


    } catch (e) {
        log.error(&quot;ERRO==============&gt; &quot; + e.message);
        throw e;
    } finally {
        if (stmt != null) {
            stmt.close();
        }
        if (conn != null) {
            conn.close();
        }
    }
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeCancelProcess</eventId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeCancelProcess(colleagueId,processId){&#xd;
    atualizaStatusTransferencia(STATUS_TRANSFENCIA.CANCELADO);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeTaskSave</eventId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var ATIVIDADES = {&#xd;
    INICIO_0: 0,&#xd;
    INICIO: 4,&#xd;
    DEFINE_APROVADOR_DESTINO: 9,&#xd;
    APROVADOR_DESTINO: 8,&#xd;
    APROVADOR_ORIGEM: 5,&#xd;
    DEFINE_APROVADOR_ORIGEM: 10,&#xd;
    LANCA_TRANSFENCIA: 26,&#xd;
    FIM: 28,&#xd;
};&#xd;
&#xd;
var STATUS_TRANSFENCIA = {&#xd;
    &quot;EM_APROVACAO&quot;: 1,&#xd;
    &quot;APROVADO&quot;: 2,&#xd;
    &quot;CANCELADO&quot;: 3,&#xd;
}&#xd;
&#xd;
function beforeTaskSave(colleagueId, nextSequenceId, userList) {&#xd;
    var ATIVIDADE = getValue(&quot;WKNumState&quot;);&#xd;
    var formMode = hAPI.getCardValue(&quot;formMode&quot;);&#xd;
&#xd;
    if (ATIVIDADE == ATIVIDADES.INICIO &amp;&amp; formMode == &quot;ADD&quot;) {&#xd;
        // Se for Inicio da Solicitação&#xd;
&#xd;
        // Insere nova Linha na tabela de Transferencias&#xd;
        var id = insereNovoRegistro();&#xd;
&#xd;
        // Salva o ID da Transferencia no campo ID_TRANSFERENCIAS_DE_CUSTO&#xd;
        hAPI.setCardValue(&quot;ID_TRANSFERENCIAS_DE_CUSTO&quot;, id);&#xd;
&#xd;
        // Insere as Transferencias, Itens e Historico com o ID da Transferencia como Chave Estrangeira&#xd;
        insereTransferencias(id);&#xd;
        insereHistorico(id);&#xd;
&#xd;
        // Salva Número da Solicitação no Processo&#xd;
        hAPI.setCardValue(&quot;numProces&quot;, getValue(&quot;WKNumProces&quot;));&#xd;
        hAPI.setCardValue(&quot;solicitacao&quot;, getValue(&quot;WKNumProces&quot;));&#xd;
    }&#xd;
    else if (ATIVIDADE == ATIVIDADES.INICIO) {&#xd;
        // Se for Atividade Inico mas o Processo já está criado&#xd;
        // Atualiza os Dados da Transferencia nas Tabelas&#xd;
        atualizaTransferencia();&#xd;
    }&#xd;
    else if (ATIVIDADE == ATIVIDADES.APROVADOR_DESTINO || ATIVIDADE == ATIVIDADES.APROVADOR_ORIGEM) {&#xd;
        var decisao = hAPI.getCardValue(&quot;decisao&quot;);&#xd;
&#xd;
        // Se Aprovado verifica aprovadores em Comum entre as Obras e realiza a Aprovação Cruzada&#xd;
        if (decisao == &quot;Aprovado&quot;) {&#xd;
            if (ATIVIDADE == ATIVIDADES.APROVADOR_DESTINO) {&#xd;
                verificaSeAprovadorTambemAprovaObraOrigem();&#xd;
            }&#xd;
            else if (ATIVIDADE == ATIVIDADES.APROVADOR_ORIGEM) {&#xd;
                verificaSeAprovadorTambemAprovaObraDestino();&#xd;
            }&#xd;
        }&#xd;
&#xd;
        // Se reprovado marca a Reprovacao nas Duas Obras para Retornar ao Inicio&#xd;
        if (decisao == &quot;Reprovado&quot;) {&#xd;
            hAPI.setCardValue(&quot;aprovadoObraOrigem&quot;, &quot;Reprovado&quot;);&#xd;
            hAPI.setCardValue(&quot;aprovadoObraDestino&quot;, &quot;Reprovado&quot;);&#xd;
        }&#xd;
&#xd;
        // Se NÂO Reprovado Automaticamente, insere o Historio na Tabela&#xd;
        // Caso seja Reprovado Automaticamente significa que a Atividade só foi enviada para Frente automaticamente, sem ação do usuário&#xd;
        if (decisao != &quot;Reprovado Automaticamente&quot;) {&#xd;
            insereHistorico(hAPI.getCardValue(&quot;ID_TRANSFERENCIAS_DE_CUSTO&quot;));&#xd;
        }&#xd;
    }&#xd;
}&#xd;
&#xd;
&#xd;
// Verifica Aprovadores em comum entre Obra Origem e Destino&#xd;
function verificaSeAprovadorTambemAprovaObraDestino() {&#xd;
    var aprovador = hAPI.getCardValue(&quot;usuarioAprovadorOrigem&quot;);&#xd;
&#xd;
    var engenheiroObraDestino = hAPI.getCardValue(&quot;engenheiroObraDestino&quot;);&#xd;
    var coordenadorObraDestino = hAPI.getCardValue(&quot;coordenadorObraDestino&quot;);&#xd;
    var diretorObraDestino = hAPI.getCardValue(&quot;diretorObraDestino&quot;);&#xd;
&#xd;
    // Verifica se o Usuario Aprovador, tambem é aprovador na Obra Destino&#xd;
    // Se sim, aprova tambem na outra obra&#xd;
    if (aprovador == engenheiroObraDestino) {&#xd;
        hAPI.setCardValue(&quot;aprovadoEngenheiroObraDestino&quot;, &quot;true&quot;);&#xd;
    }&#xd;
    if (aprovador == coordenadorObraDestino) {&#xd;
        hAPI.setCardValue(&quot;aprovadoCoordenadorObraDestino&quot;, &quot;true&quot;);&#xd;
    }&#xd;
    if (aprovador == diretorObraDestino) {&#xd;
        hAPI.setCardValue(&quot;aprovadoDiretorObraDestino&quot;, &quot;true&quot;);&#xd;
    }&#xd;
}&#xd;
function verificaSeAprovadorTambemAprovaObraOrigem() {&#xd;
    var aprovador = hAPI.getCardValue(&quot;usuarioAprovadorDestino&quot;);&#xd;
&#xd;
    var engenheiroObraOrigem = hAPI.getCardValue(&quot;engenheiroObraOrigem&quot;);&#xd;
    var coordenadorObraOrigem = hAPI.getCardValue(&quot;coordenadorObraOrigem&quot;);&#xd;
    var diretorObraOrigem = hAPI.getCardValue(&quot;diretorObraOrigem&quot;);&#xd;
&#xd;
&#xd;
    if (aprovador == engenheiroObraOrigem) {&#xd;
        // Se o aprovador for o Engenheiro também do destino marca como aprovado&#xd;
        hAPI.setCardValue(&quot;aprovadoEngenheiroObraOrigem&quot;, &quot;true&quot;);&#xd;
    }&#xd;
    if (aprovador == coordenadorObraOrigem) {&#xd;
        hAPI.setCardValue(&quot;aprovadoCoordenadorObraOrigem&quot;, &quot;true&quot;);&#xd;
    }&#xd;
    if (aprovador == diretorObraOrigem) {&#xd;
        hAPI.setCardValue(&quot;aprovadoDiretorObraOrigem&quot;, &quot;true&quot;);&#xd;
        hAPI.setCardValue(&quot;aprovadoObraOrigem&quot;, &quot;true&quot;);&#xd;
    }&#xd;
}&#xd;
&#xd;
&#xd;
// Operações Tabelas de Transferencias Castilho_Custom&#xd;
function insereNovoRegistro() {&#xd;
    var numProces = getValue(&quot;WKNumProces&quot;);&#xd;
    var CODCOLIGADA_ORIGEM = hAPI.getCardValue(&quot;ccustoObraOrigem&quot;).split(&quot; - &quot;)[0];&#xd;
    var CCUSTO_ORIGEM = hAPI.getCardValue(&quot;ccustoObraOrigem&quot;).split(&quot; - &quot;)[1];&#xd;
    var CODCOLIGADA_DESTINO = hAPI.getCardValue(&quot;ccustoObraDestino&quot;).split(&quot; - &quot;)[0];&#xd;
    var CCUSTO_DESTINO = hAPI.getCardValue(&quot;ccustoObraDestino&quot;).split(&quot; - &quot;)[1];&#xd;
    var SOLICITANTE = hAPI.getCardValue(&quot;solicitante&quot;);&#xd;
&#xd;
    var VALOR = moneyToFloat(hAPI.getCardValue(&quot;valorObraDestino&quot;));&#xd;
&#xd;
    &#xd;
&#xd;
    var query =&#xd;
        &quot;INSERT INTO TRANSFERENCIAS_DE_CUSTO (&quot; +&#xd;
        &quot;   ID_SOLICITACAO, &quot; +&#xd;
        &quot;   CODCOLIGADA_ORIGEM, &quot; +&#xd;
        &quot;   CCUSTO_ORIGEM, &quot; +&#xd;
        &quot;   CODCOLIGADA_DESTINO, &quot; +&#xd;
        &quot;   CCUSTO_DESTINO, &quot; +&#xd;
        &quot;   SOLICITANTE, &quot; +&#xd;
        &quot;   VALOR, &quot; +&#xd;
        &quot;   DATA_SOLICITACAO, &quot; +&#xd;
        &quot;   STATUS)&quot; +&#xd;
        &quot; OUTPUT Inserted.ID &quot;+&#xd;
        &quot; VALUES &quot; +&#xd;
        &quot;(?,?,?,?,?,?,?,SYSDATETIME(),?)&quot;;&#xd;
&#xd;
    return executeInsert(query, [&#xd;
        { type: &quot;int&quot;, value: numProces },&#xd;
        { type: &quot;int&quot;, value: CODCOLIGADA_ORIGEM },&#xd;
        { type: &quot;varchar&quot;, value: CCUSTO_ORIGEM },&#xd;
        { type: &quot;int&quot;, value: CODCOLIGADA_DESTINO },&#xd;
        { type: &quot;varchar&quot;, value: CCUSTO_DESTINO },&#xd;
        { type: &quot;varchar&quot;, value: SOLICITANTE },&#xd;
        { type: &quot;float&quot;, value: VALOR },&#xd;
        { type: &quot;int&quot;, value: STATUS_TRANSFENCIA.EM_APROVACAO },&#xd;
    ]);&#xd;
}&#xd;
function atualizaTransferencia() {&#xd;
    var id = hAPI.getCardValue(&quot;ID_TRANSFERENCIAS_DE_CUSTO&quot;);&#xd;
&#xd;
    var CODCOLIGADA_ORIGEM = hAPI.getCardValue(&quot;ccustoObraOrigem&quot;).split(&quot; - &quot;)[0];&#xd;
    var CCUSTO_ORIGEM = hAPI.getCardValue(&quot;ccustoObraOrigem&quot;).split(&quot; - &quot;)[1];&#xd;
    var CODCOLIGADA_DESTINO = hAPI.getCardValue(&quot;ccustoObraDestino&quot;).split(&quot; - &quot;)[0];&#xd;
    var CCUSTO_DESTINO = hAPI.getCardValue(&quot;ccustoObraDestino&quot;).split(&quot; - &quot;)[1];&#xd;
&#xd;
    var VALOR = moneyToFloat(hAPI.getCardValue(&quot;valorObraDestino&quot;));&#xd;
&#xd;
    var query = &quot;UPDATE TRANSFERENCIAS_DE_CUSTO SET &quot;;&#xd;
    query += &quot; CODCOLIGADA_ORIGEM = ?,&quot;;&#xd;
    query += &quot; CCUSTO_ORIGEM = ?,&quot;;&#xd;
    query += &quot; CODCOLIGADA_DESTINO = ?,&quot;;&#xd;
    query += &quot; CCUSTO_DESTINO = ?,&quot;;&#xd;
    query += &quot; VALOR = ? &quot;;&#xd;
    query += &quot; WHERE ID = ?&quot;;&#xd;
&#xd;
    executeUpdate(query, [&#xd;
        { type: &quot;int&quot;, value: CODCOLIGADA_ORIGEM },&#xd;
        { type: &quot;varchar&quot;, value: CCUSTO_ORIGEM },&#xd;
        { type: &quot;int&quot;, value: CODCOLIGADA_DESTINO },&#xd;
        { type: &quot;varchar&quot;, value: CCUSTO_DESTINO },&#xd;
        { type: &quot;float&quot;, value: VALOR },&#xd;
        { type: &quot;int&quot;, value: id },&#xd;
    ]);&#xd;
&#xd;
&#xd;
    var query = &quot;DELETE FROM TRANSFERENCIAS_DE_CUSTO_ITENS WHERE ID_TRANSFERENCIA IN (SELECT ID FROM TRANSFERENCIAS_DE_CUSTO_TRANSFERENCIA WHERE ID_TRANSFERENCIA = ?)&quot;;&#xd;
    executeUpdate(query, [{ type: &quot;int&quot;, value: id }]);&#xd;
&#xd;
    var query = &quot;DELETE FROM TRANSFERENCIAS_DE_CUSTO_TRANSFERENCIA WHERE ID_TRANSFERENCIA = ?&quot;;&#xd;
    executeUpdate(query, [{ type: &quot;int&quot;, value: id }]);&#xd;
&#xd;
    insereTransferencias(id);&#xd;
    insereHistorico(id);&#xd;
}&#xd;
function insereTransferencias(ID_PAI) {&#xd;
    var indices = hAPI.getChildrenIndexes(&quot;tableTransferencias&quot;);&#xd;
&#xd;
    for (var i = 0; i &lt; indices.length; i++) {&#xd;
        var id = indices[i];&#xd;
&#xd;
        var tipo = hAPI.getCardValue(&quot;motivoTransferencia&quot; + &quot;___&quot; + id);&#xd;
        var motivo = hAPI.getCardValue(&quot;textMotivoTransferencia&quot; + &quot;___&quot; + id);&#xd;
        var valor = moneyToFloat(hAPI.getCardValue(&quot;valorTotalTransferencia&quot; + &quot;___&quot; + id));&#xd;
        var itens = JSON.parse(hAPI.getCardValue(&quot;listItensTransferencia&quot; + &quot;___&quot; + id));&#xd;
&#xd;
        var TRANSFERE_CUSTO = hAPI.getCardValue(&quot;TRANSFERE_CUSTO&quot;) == &quot;true&quot; ? 1 : 0;&#xd;
        var TRANSFERE_RECEITA = hAPI.getCardValue(&quot;TRANSFERE_RECEITA&quot;) == &quot;true&quot; ? 1 : 0;&#xd;
&#xd;
        var query = &quot;INSERT INTO TRANSFERENCIAS_DE_CUSTO_TRANSFERENCIA (ID_TRANSFERENCIA, TIPO, VALOR, JUSTIFICATIVA, TRANSFERE_CUSTO, TRANSFERE_RECEITA) OUTPUT Inserted.ID  VALUES (?,?,?,?,?,?)&quot;;&#xd;
&#xd;
        var ID_TRANSFERENCIA = executeInsert(query, [&#xd;
            { type: &quot;int&quot;, value: ID_PAI },&#xd;
            { type: &quot;varchar&quot;, value: tipo },&#xd;
            { type: &quot;varchar&quot;, value: valor },&#xd;
            { type: &quot;varchar&quot;, value: motivo },&#xd;
            { type: &quot;int&quot;, value: TRANSFERE_CUSTO },&#xd;
            { type: &quot;int&quot;, value: TRANSFERE_RECEITA },&#xd;
        ]);&#xd;
&#xd;
        for (var j = 0; j &lt; itens.length; j++) {&#xd;
            var item = itens[j];&#xd;
            insereItem(ID_TRANSFERENCIA, item);&#xd;
        }&#xd;
    }&#xd;
}&#xd;
function insereItem(ID_TRANSFERENCIA, item) {&#xd;
    var query =&#xd;
        &quot;INSERT INTO TRANSFERENCIAS_DE_CUSTO_ITENS (&quot; +&#xd;
        &quot; ID_TRANSFERENCIA, &quot; +&#xd;
        &quot; CODIGO_PRODUTO, &quot; +&#xd;
        &quot; DESCRICAO_PRODUTO, &quot; +&#xd;
        &quot; DESCRICAO, &quot; +&#xd;
        &quot; QUANTIDADE, &quot; +&#xd;
        &quot; UNIDADE, &quot; +&#xd;
        &quot; VALOR_UNITARIO) &quot; +&#xd;
        &quot; VALUES (?,?,?,?,?,?,?)&quot;;&#xd;
&#xd;
    executeInsert(query, [&#xd;
        { type: &quot;int&quot;, value: ID_TRANSFERENCIA },&#xd;
        { type: &quot;varchar&quot;, value: item.CODPRODUTO },&#xd;
        { type: &quot;varchar&quot;, value: item.DESCPRODUTO },&#xd;
        { type: &quot;varchar&quot;, value: item.DESCRICAO },&#xd;
        { type: &quot;float&quot;, value: moneyToFloat(item.QUANTIDADE) },&#xd;
        { type: &quot;varchar&quot;, value: item.UN },&#xd;
        { type: &quot;float&quot;, value: moneyToFloat(item.VALOR_UNITARIO) }&#xd;
    ]);&#xd;
}&#xd;
function insereHistorico(ID_PAI) {&#xd;
    var usuario = hAPI.getCardValue(&quot;userCode&quot;);&#xd;
    var observacao = hAPI.getCardValue(&quot;textObservacao&quot;);&#xd;
    var atividadeAtual = hAPI.getCardValue(&quot;atividade&quot;);&#xd;
    var data = getDateTimeNow();&#xd;
&#xd;
&#xd;
    var movimentacao = &quot;&quot;;&#xd;
    var decisao = hAPI.getCardValue(&quot;decisao&quot;);&#xd;
    var formMode = hAPI.getCardValue(&quot;formMode&quot;);&#xd;
    if (formMode == &quot;ADD&quot;) {&#xd;
        movimentacao = &quot;Inicio&quot;;&#xd;
    }&#xd;
    else if (atividadeAtual == ATIVIDADES.INICIO) {&#xd;
        movimentacao = &quot;Ajuste&quot;;&#xd;
    }&#xd;
    else if (decisao == &quot;Aprovado&quot;) {&#xd;
        movimentacao = &quot;Aprovado&quot;;&#xd;
    }&#xd;
    else if (decisao == &quot;Reprovado&quot;) {&#xd;
        movimentacao = &quot;Reprovado&quot;;&#xd;
    } else {&#xd;
&#xd;
    }&#xd;
&#xd;
    var linha = new java.util.HashMap();&#xd;
    linha.put(&quot;usuario&quot;, usuario);&#xd;
    linha.put(&quot;movimentacao&quot;, movimentacao);&#xd;
    linha.put(&quot;observacao&quot;, observacao);&#xd;
    linha.put(&quot;dataMovimento&quot;, data);&#xd;
    hAPI.addCardChild(&quot;tableHistorico&quot;, linha);&#xd;
&#xd;
    var query =&#xd;
        &quot;INSERT INTO TRANSFERENCIAS_DE_CUSTO_HISTORICO (&quot; +&#xd;
        &quot;   ID_TRANSFERENCIA, &quot; +&#xd;
        &quot;   USUARIO, &quot; +&#xd;
        &quot;   DATA_HISTORICO, &quot; +&#xd;
        &quot;   OBSERVACAO, &quot; +&#xd;
        &quot;   DECISAO) &quot; +&#xd;
        &quot; VALUES &quot; +&#xd;
        &quot;  (?,?,?,?,?)&quot;;&#xd;
&#xd;
    executeInsert(query, [&#xd;
        { type: &quot;int&quot;, value: ID_PAI },&#xd;
        { type: &quot;varchar&quot;, value: usuario },&#xd;
        { type: &quot;varchar&quot;, value: data },&#xd;
        { type: &quot;varchar&quot;, value: observacao },&#xd;
        { type: &quot;varchar&quot;, value: movimentacao },&#xd;
    ]);&#xd;
}&#xd;
&#xd;
// Utils&#xd;
function moneyToFloat(val) {&#xd;
    if (val.indexOf(&quot;R$&quot;) &gt; -1) {&#xd;
        val = val.replace(&quot;R$&quot;, &quot;&quot;);&#xd;
        val = val.trim();&#xd;
    }&#xd;
&#xd;
    val = val.replace(&quot;.&quot;, &quot;&quot;);&#xd;
    val = val.replace(&quot;,&quot;, &quot;.&quot;);&#xd;
    val = parseFloat(val);&#xd;
    if (isNaN(val)) {&#xd;
        return 0;&#xd;
    }&#xd;
    return val;&#xd;
}&#xd;
function getDateTimeNow() {&#xd;
    var date = new Date();&#xd;
    var dia = date.getDate();&#xd;
    if (dia &lt; 10) {&#xd;
        dia = &quot;0&quot; + dia;&#xd;
    }&#xd;
    var mes = date.getMonth() + 1;&#xd;
    if (mes &lt; 10) {&#xd;
        mes = &quot;0&quot; + mes;&#xd;
    }&#xd;
&#xd;
    var ano = date.getFullYear();&#xd;
&#xd;
    var hora = date.getHours();&#xd;
    if (hora &lt; 10) {&#xd;
        hora = &quot;0&quot; + hora;&#xd;
    }&#xd;
&#xd;
    var minutos = date.getMinutes();&#xd;
    if (minutos &lt; 10) {&#xd;
        minutos = &quot;0&quot; + minutos;&#xd;
    }&#xd;
&#xd;
    var dateTime = [ano, mes, dia].join(&quot;-&quot;) + &quot; &quot; + hora + &quot;:&quot; + minutos;&#xd;
    return dateTime&#xd;
}&#xd;
function getDateNow() {&#xd;
    var date = new Date();&#xd;
    var dia = date.getDate();&#xd;
    if (dia &lt; 10) {&#xd;
        dia = &quot;0&quot; + dia;&#xd;
    }&#xd;
    var mes = date.getMonth() + 1;&#xd;
    if (mes &lt; 10) {&#xd;
        mes = &quot;0&quot; + mes;&#xd;
    }&#xd;
&#xd;
    var ano = date.getFullYear();&#xd;
&#xd;
&#xd;
    var dateTime = [ano, mes, dia].join(&quot;-&quot;);&#xd;
    return dateTime&#xd;
}&#xd;
function executeInsert(query, constraints) {&#xd;
    var dataSource = &quot;/jdbc/CastilhoCustom&quot;;&#xd;
    var ic = new javax.naming.InitialContext();&#xd;
    var ds = ic.lookup(dataSource);&#xd;
&#xd;
    log.info(&quot;wfkTransferenciaDeCustoEntreObras.beforeTaskSave: executandoQuery&quot;);&#xd;
    log.info(query);&#xd;
    try {&#xd;
        var conn = ds.getConnection();&#xd;
        var stmt = conn.prepareStatement(query, Packages.java.sql.Statement.RETURN_GENERATED_KEYS);&#xd;
&#xd;
        var counter = 1;&#xd;
        for (var i = 0; i &lt; constraints.length; i++) {&#xd;
            var val = constraints[i];&#xd;
            if (val.type == &quot;int&quot;) {&#xd;
                stmt.setInt(counter, val.value);&#xd;
            }&#xd;
            else if (val.type == &quot;float&quot;) {&#xd;
                stmt.setFloat(counter, val.value);&#xd;
            }&#xd;
            else if (val.type == &quot;date&quot;) {&#xd;
                stmt.setString(counter, val.value);&#xd;
            }&#xd;
            else if (val.type == &quot;datetime&quot;) {&#xd;
                stmt.setString(counter, val.value);&#xd;
            } else {&#xd;
                stmt.setString(counter, val.value);&#xd;
            }&#xd;
            counter++;&#xd;
        }&#xd;
&#xd;
        log.info(&quot;wfkTransferenciaDeCustoEntreObras.beforeTaskSave: executandoQuery&quot;+query.length)&#xd;
&#xd;
       var hasResultSet = stmt.execute();&#xd;
        if (hasResultSet) {&#xd;
            var rs = stmt.getResultSet();&#xd;
            if (rs.next()) {&#xd;
                var id = rs.getInt(1);&#xd;
                log.info(&quot;id&quot;);&#xd;
                log.dir(id);&#xd;
                return id;&#xd;
            }&#xd;
        }&#xd;
&#xd;
&#xd;
&#xd;
    } catch (e) {&#xd;
        log.error(&quot;ERRO==============&gt; &quot; + e.message);&#xd;
        throw e;&#xd;
    } finally {&#xd;
        if (stmt != null) {&#xd;
            stmt.close();&#xd;
        }&#xd;
        if (conn != null) {&#xd;
            conn.close();&#xd;
        }&#xd;
    }&#xd;
}&#xd;
function executeUpdate(query, constraints) {&#xd;
    var dataSource = &quot;/jdbc/CastilhoCustom&quot;;&#xd;
    var ic = new javax.naming.InitialContext();&#xd;
    var ds = ic.lookup(dataSource);&#xd;
&#xd;
    log.info(&quot;wfkTransferenciaDeCustoEntreObras.beforeTaskSave: executandoQuery&quot;);&#xd;
    log.info(query);&#xd;
    try {&#xd;
        var conn = ds.getConnection();&#xd;
        var stmt = conn.prepareStatement(query, Packages.java.sql.Statement.RETURN_GENERATED_KEYS);&#xd;
&#xd;
        var counter = 1;&#xd;
        for (var i = 0; i &lt; constraints.length; i++) {&#xd;
            var val = constraints[i];&#xd;
            if (val.type == &quot;int&quot;) {&#xd;
                stmt.setInt(counter, val.value);&#xd;
            }&#xd;
            else if (val.type == &quot;float&quot;) {&#xd;
                stmt.setFloat(counter, val.value);&#xd;
            }&#xd;
            else if (val.type == &quot;date&quot;) {&#xd;
                stmt.setString(counter, val.value);&#xd;
            }&#xd;
            else if (val.type == &quot;datetime&quot;) {&#xd;
                stmt.setString(counter, val.value);&#xd;
            } else {&#xd;
                stmt.setString(counter, val.value);&#xd;
            }&#xd;
            counter++;&#xd;
        }&#xd;
&#xd;
        log.info(&quot;wfkTransferenciaDeCustoEntreObras.beforeTaskSave: executandoQuery&quot;+constraints.length)&#xd;
&#xd;
       stmt.execute();&#xd;
&#xd;
&#xd;
    } catch (e) {&#xd;
        log.error(&quot;ERRO==============&gt; &quot; + e.message);&#xd;
        throw e;&#xd;
    } finally {&#xd;
        if (stmt != null) {&#xd;
            stmt.close();&#xd;
        }&#xd;
        if (conn != null) {&#xd;
            conn.close();&#xd;
        }&#xd;
    }&#xd;
}&#xd;
function FormataValorParaMoeda(valor) {&#xd;
    return &apos;R$ &apos; + valor.toFixed(2).replace(&apos;.&apos;, &apos;,&apos;);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask10</eventId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>// Define Aprovador Obra Origem
function servicetask10(attempt, message) {
    var decisao = hAPI.getCardValue(&quot;decisao&quot;);
    if (decisao==&quot;&quot;) {
        // Se Decisao == &quot;&quot;, significar que o Processo foi iniciado e Define o Primeiro Aprovador
        defineProximoAprovador();
        hAPI.setCardValue(&quot;decisaoAprovadorObraOrigem&quot;, &quot;Aprovação&quot;);
        return true;
    }

    if (decisao == &quot;Aprovado&quot;) {
        marcaAprovacaoDoAprovador();
        verificaSeAprovadorTambemAprovaPelaDestino();

        var aprovadoTotalmente = verificaSeTotalmenteAprovado();
        if (aprovadoTotalmente) {
            hAPI.setCardValue(&quot;decisaoAprovadorObraOrigem&quot;, &quot;Aprovado&quot;);
            return true;
        }
        else{
            defineProximoAprovador();
            hAPI.setCardValue(&quot;decisaoAprovadorObraOrigem&quot;, &quot;Aprovação&quot;);
            return true;
        }
    }

    if (decisao == &quot;Reprovado&quot; || decisao == &quot;Reprovado Automaticamente&quot;) {
        hAPI.setCardValue(&quot;decisaoAprovadorObraOrigem&quot;, &quot;Reprovado&quot;);
        return true;
    }
}

function defineProximoAprovador() {
    var valorTotalTransferencia = hAPI.getCardValue(&quot;valorTotal&quot;);

    var aprovadoEngenheiroObraOrigem = hAPI.getCardValue(&quot;aprovadoEngenheiroObraOrigem&quot;);
    var aprovadoCoordenadorObraOrigem = hAPI.getCardValue(&quot;aprovadoCoordenadorObraOrigem&quot;);
    var aprovadoDiretorObraOrigem = hAPI.getCardValue(&quot;aprovadoDiretorObraOrigem&quot;);

    if (aprovadoEngenheiroObraOrigem != &quot;true&quot;) {
        var engenheiroObraOrigem = hAPI.getCardValue(&quot;engenheiroObraOrigem&quot;);
        hAPI.setCardValue(&quot;usuarioAprovadorOrigem&quot;, engenheiroObraOrigem);
    }
    else if (aprovadoCoordenadorObraOrigem != &quot;true&quot;) {
        var coordenadorObraOrigem = hAPI.getCardValue(&quot;coordenadorObraOrigem&quot;);
        hAPI.setCardValue(&quot;usuarioAprovadorOrigem&quot;, coordenadorObraOrigem);
    }
    else if (valorTotalTransferencia &gt; 250000 &amp;&amp; aprovadoDiretorObraOrigem != &quot;true&quot;) {
        var diretorObraOrigem = hAPI.getCardValue(&quot;diretorObraOrigem&quot;);
        hAPI.setCardValue(&quot;usuarioAprovadorOrigem&quot;, diretorObraOrigem);
    } 
    else {
        hAPI.setCardValue(&quot;aprovadoObraOrigem&quot;, &quot;true&quot;);
        hAPI.setCardValue(&quot;usuarioAprovadorOrigem&quot;, &quot;&quot;);
    }

    return hAPI.getCardValue(&quot;usuarioAprovadorOrigem&quot;);
}
function marcaAprovacaoDoAprovador() {
    var aprovador = hAPI.getCardValue(&quot;usuarioAprovadorOrigem&quot;);

    var engenheiroObraOrigem = hAPI.getCardValue(&quot;engenheiroObraOrigem&quot;);
    var coordenadorObraOrigem = hAPI.getCardValue(&quot;coordenadorObraOrigem&quot;);
    var diretorObraOrigem = hAPI.getCardValue(&quot;diretorObraOrigem&quot;);

    if (aprovador == engenheiroObraOrigem) {
        hAPI.setCardValue(&quot;aprovadoEngenheiroObraOrigem&quot;, &quot;true&quot;);
    }
    if (aprovador == coordenadorObraOrigem) {
        hAPI.setCardValue(&quot;aprovadoCoordenadorObraOrigem&quot;, &quot;true&quot;);
    }
    if (aprovador == diretorObraOrigem) {
        hAPI.setCardValue(&quot;aprovadoDiretorObraOrigem&quot;, &quot;true&quot;);
    }
}
function verificaSeAprovadorTambemAprovaPelaDestino() {
    var aprovador = hAPI.getCardValue(&quot;usuarioAprovadorOrigem&quot;);

    var engenheiroObraDestino = hAPI.getCardValue(&quot;engenheiroObraDestino&quot;);
    var coordenadorObrDestino = hAPI.getCardValue(&quot;coordenadorObraDestino&quot;);
    var diretorObraOriDestino = hAPI.getCardValue(&quot;diretorObraDestino&quot;);

    if (aprovador == engenheiroObraDestino) {
        hAPI.setCardValue(&quot;aprovadoEngenheiroObraDestino&quot;, &quot;true&quot;);
    }
    else if (aprovador == coordenadorObrDestino) {
        hAPI.setCardValue(&quot;aprovadoCoordenadorObraDestino&quot;, &quot;true&quot;);
    }
    else if (aprovador == diretorObraOriDestino) {
        hAPI.setCardValue(&quot;aprovadoDiretorObraDestino&quot;, &quot;true&quot;);
    }
}
function verificaSeTotalmenteAprovado(){
    var valorTotalTransferencia = parseFloat(hAPI.getCardValue(&quot;valorTotal&quot;));

    var aprovadoEngenheiroObraOrigem = hAPI.getCardValue(&quot;aprovadoEngenheiroObraOrigem&quot;);
    var aprovadoCoordenadorObraOrigem = hAPI.getCardValue(&quot;aprovadoCoordenadorObraOrigem&quot;);
    var aprovadoDiretorObraOrigem = hAPI.getCardValue(&quot;aprovadoDiretorObraOrigem&quot;);

    if (aprovadoEngenheiroObraOrigem == &quot;true&quot; &amp;&amp; aprovadoCoordenadorObraOrigem == &quot;true&quot;) {
        if (aprovadoDiretorObraOrigem == &quot;true&quot; || valorTotalTransferencia &lt; 250000) {
            return true;
        }
    }

    return false;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask9</eventId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>// Define Aprovador Obra Destino
function servicetask9(attempt, message) {
    var decisao = hAPI.getCardValue(&quot;decisao&quot;);
    if (decisao==&quot;&quot;) {
        // Se Decisao == &quot;&quot;, significar que o Processo foi iniciado e Define o Primeiro Aprovador
        defineProximoAprovador();
        hAPI.setCardValue(&quot;decisaoAprovadorObraDestino&quot;, &quot;Aprovação&quot;);
        if (hAPI.getCardValue(&quot;usuarioAprovadorDestino&quot;) == &quot;&quot;) {
            hAPI.setCardValue(&quot;usuarioAprovadorDestino&quot;, &quot;gabriel.persike&quot;);
        }
        return true;
    }

    if (decisao == &quot;Aprovado&quot;) {
        marcaAprovacaoDoAprovador();
        var aprovadoTotalmente = verificaSeTotalmenteAprovado();
        if (aprovadoTotalmente) {
            hAPI.setCardValue(&quot;decisaoAprovadorObraDestino&quot;, &quot;Aprovado&quot;);
            return true;
        }
        else{
            defineProximoAprovador();
            hAPI.setCardValue(&quot;decisaoAprovadorObraDestino&quot;, &quot;Aprovação&quot;);
            return true;
        }
    }

    if (decisao == &quot;Reprovado&quot; || decisao == &quot;Reprovado Automaticamente&quot;) {
        hAPI.setCardValue(&quot;decisaoAprovadorObraDestino&quot;, &quot;Reprovado&quot;);
        return true;
    }
}

function defineProximoAprovador(){
    var valorTotalTransferencia = parseFloat(hAPI.getCardValue(&quot;valorTotal&quot;));

    // Verifica quais níveis já aprovaram
    var isAprovadoPeloEngenheiro = hAPI.getCardValue(&quot;aprovadoEngenheiroObraDestino&quot;) == &quot;true&quot;;
    var isAprovadoCoordenador = hAPI.getCardValue(&quot;aprovadoCoordenadorObraDestino&quot;) == &quot;true&quot;;
    var isAprovadoDiretor = hAPI.getCardValue(&quot;aprovadoDiretorObraDestino&quot;) == &quot;true&quot;;

    // Verifica casos que o nível de Aprovação é o mesmo na Origem e Destino
    var mesmoEngenheiroOrigemDestino = hAPI.getCardValue(&quot;engenheiroObraDestino&quot;) == hAPI.getCardValue(&quot;engenheiroObraOrigem&quot;);
    var mesmoCoordenadorOrigemDestino = hAPI.getCardValue(&quot;coordenadorObraDestino&quot;) == hAPI.getCardValue(&quot;coordenadorObraOrigem&quot;);
    var mesmoDiretorOrigemDestino = hAPI.getCardValue(&quot;diretorObraDestino&quot;) == hAPI.getCardValue(&quot;diretorObraOrigem&quot;);


    // Caso o Aprovador também Aprova na Obra Origem, não defini ele como Aprovador na Destino para não ocorrer aprovações Duplicadas
    if (!isAprovadoPeloEngenheiro &amp;&amp; !mesmoEngenheiroOrigemDestino) {
        hAPI.setCardValue(&quot;usuarioAprovadorDestino&quot;, hAPI.getCardValue(&quot;engenheiroObraDestino&quot;));
        return;
    }
    if (!isAprovadoCoordenador &amp;&amp; !mesmoCoordenadorOrigemDestino) {
        hAPI.setCardValue(&quot;usuarioAprovadorDestino&quot;, hAPI.getCardValue(&quot;coordenadorObraDestino&quot;));
        return;
    }
    if (valorTotalTransferencia &gt; 250000 &amp;&amp; !isAprovadoDiretor &amp;&amp; !mesmoDiretorOrigemDestino) {
        hAPI.setCardValue(&quot;usuarioAprovadorDestino&quot;, hAPI.getCardValue(&quot;diretorObraDestino&quot;));
        return;
    }
}
function marcaAprovacaoDoAprovador() {
    var aprovador = hAPI.getCardValue(&quot;usuarioAprovadorDestino&quot;);

    var engenheiroObraDestino = hAPI.getCardValue(&quot;engenheiroObraDestino&quot;);
    var coordenadorObraDestino = hAPI.getCardValue(&quot;coordenadorObraDestino&quot;);
    var diretorObraDestino = hAPI.getCardValue(&quot;diretorObraDestino&quot;);

    if (aprovador == engenheiroObraDestino) {
        hAPI.setCardValue(&quot;aprovadoEngenheiroObraDestino&quot;,&quot;true&quot;);
    }
    if (aprovador == coordenadorObraDestino) {
        hAPI.setCardValue(&quot;aprovadoCoordenadorObraDestino&quot;,&quot;true&quot;);
    }
    if (aprovador == diretorObraDestino) {
        hAPI.setCardValue(&quot;aprovadoDiretorObraDestino&quot;,&quot;true&quot;);
    }
}
function verificaSeTotalmenteAprovado(){
    var valorTotalTransferencia = parseFloat(hAPI.getCardValue(&quot;valorTotal&quot;));

    // Verifica casos que o nível de Aprovação é o mesmo na Origem e Destino
    var mesmoEngenheiroOrigemDestino = hAPI.getCardValue(&quot;engenheiroObraDestino&quot;) == hAPI.getCardValue(&quot;engenheiroObraOrigem&quot;);
    var mesmoCoordenadorOrigemDestino = hAPI.getCardValue(&quot;coordenadorObraDestino&quot;) == hAPI.getCardValue(&quot;coordenadorObraOrigem&quot;);
    var mesmoDiretorOrigemDestino = hAPI.getCardValue(&quot;diretorObraDestino&quot;) == hAPI.getCardValue(&quot;diretorObraOrigem&quot;);

    var isAprovadoEngenheiro = hAPI.getCardValue(&quot;aprovadoEngenheiroObraDestino&quot;) == &quot;true&quot;;
    var isAprovadoCoordenador = hAPI.getCardValue(&quot;aprovadoCoordenadorObraDestino&quot;) == &quot;true&quot;;
    var isAprovadoDiretor = hAPI.getCardValue(&quot;aprovadoDiretorObraDestino&quot;) == &quot;true&quot;;

    log.info(&quot;verificaSeTotalmenteAprovado: Init&quot;);
    log.info(&quot;verificaSeTotalmenteAprovado: &quot; + hAPI.getCardValue(&quot;aprovadoEngenheiroObraDestino&quot;));
    log.info(&quot;verificaSeTotalmenteAprovado: &quot; + isAprovadoEngenheiro);

    if ((isAprovadoEngenheiro || mesmoEngenheiroOrigemDestino) &amp;&amp; (isAprovadoCoordenador || mesmoCoordenadorOrigemDestino)) {
        log.info(&quot;verificaSeTotalmenteAprovado: enge e coord aprovado&quot;);
        if ((isAprovadoDiretor || mesmoDiretorOrigemDestino) || valorTotalTransferencia &lt; 250000) {
            log.info(&quot;verificaSeTotalmenteAprovado: dir aprovado&quot;);
            return true;
        }
    }

    return false;
}</eventDescription>
    </WorkflowProcessEvent>
  </list>
  <list/>
  <list>
    <SwimLane>
      <color>FFFFFF</color>
      <height>680</height>
      <width>1280</width>
      <positionX>10</positionX>
      <positionY>10</positionY>
      <stateName>Pool</stateName>
      <type>1</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>1</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>226</height>
      <width>1250</width>
      <positionX>40</positionX>
      <positionY>10</positionY>
      <stateName>Solicitante</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>2</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>226</height>
      <width>1250</width>
      <positionX>40</positionX>
      <positionY>236</positionY>
      <stateName>Aprovação Obra Origem</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>3</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>228</height>
      <width>1250</width>
      <positionX>40</positionX>
      <positionY>462</positionY>
      <stateName>Aprovação Obra Destino</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>1</version>
        <sequence>4</sequence>
      </swimLanePK>
    </SwimLane>
  </list>
  <list/>
  <list/>
  <list>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>30</version>
        <linkSequence>11</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>170</positionX>
      <positionY>382</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>30</version>
        <linkSequence>12</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>168</positionX>
      <positionY>520</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>30</version>
        <linkSequence>43</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>685</positionX>
      <positionY>382</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>30</version>
        <linkSequence>47</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>870</positionX>
      <positionY>96</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>Transferência de Custos entre Obras</processId>
        <version>30</version>
        <linkSequence>47</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>272</positionX>
      <positionY>96</positionY>
    </ProcessLinkBend>
  </list>
  <list/>
  <list/>
  <list/>
  <list>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>Transferência de Custos entre Obras</processId>
      <version>1</version>
      <sequence>9</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName>Servidor indefinido</serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>Transferência de Custos entre Obras</processId>
      <version>1</version>
      <sequence>10</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>Transferência de Custos entre Obras</processId>
      <version>1</version>
      <sequence>26</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
  </list>
  <list/>
  <list/>
  <list/>
  <list>
    <ConditionProcessAutomaticRules>
      <sequence>36</sequence>
      <expressionOrder>1</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>decisaoAprovadorObraOrigem</field>
      <value>Aprovação</value>
      <operator>1</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>36</sequence>
      <expressionOrder>2</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>decisaoAprovadorObraOrigem</field>
      <value>Aprovado</value>
      <operator>1</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>36</sequence>
      <expressionOrder>3</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>decisaoAprovadorObraOrigem</field>
      <value>Reprovado</value>
      <operator>1</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>37</sequence>
      <expressionOrder>1</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>decisaoAprovadorObraDestino</field>
      <value>Aprovação</value>
      <operator>1</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>37</sequence>
      <expressionOrder>2</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>decisaoAprovadorObraDestino</field>
      <value>Aprovado</value>
      <operator>1</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>37</sequence>
      <expressionOrder>3</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>decisaoAprovadorObraDestino</field>
      <value>Reprovado</value>
      <operator>1</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>44</sequence>
      <expressionOrder>1</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>aprovadoObraDestino</field>
      <value>Reprovado</value>
      <operator>1</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>44</sequence>
      <expressionOrder>1</expressionOrder>
      <ruleOrder>2</ruleOrder>
      <field>aprovadoObraOrigem</field>
      <value>Reprovado</value>
      <operator>1</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>44</sequence>
      <expressionOrder>2</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>aprovadoObraDestino</field>
      <value>Reprovado</value>
      <operator>2</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>44</sequence>
      <expressionOrder>2</expressionOrder>
      <ruleOrder>2</ruleOrder>
      <field>aprovadoObraOrigem</field>
      <value>Reprovado</value>
      <operator>2</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
  </list>
</list>